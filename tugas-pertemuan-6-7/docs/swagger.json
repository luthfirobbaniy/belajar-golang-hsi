{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Sistem manajemen mahasiswa using Go Fiber",
        "title": "Sistem Manajemen Mahasiswa",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user with static credentials and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to generate token",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register new user and return JWT token for auto login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User register",
                "parameters": [
                    {
                        "description": "Register credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Register successful",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to generate token",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get profile",
                "responses": {
                    "200": {
                        "description": "Get profile successful",
                        "schema": {
                            "$ref": "#/definitions/models.GetProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all student data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get all student",
                "responses": {
                    "200": {
                        "description": "Get students successful",
                        "schema": {
                            "$ref": "#/definitions/models.GetStudentsResponse"
                        }
                    },
                    "401": {
                        "description": "Authorization header required or Invalid token",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create student",
                "parameters": [
                    {
                        "description": "Create student data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create student successful",
                        "schema": {
                            "$ref": "#/definitions/models.CreateStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/students/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get one student data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get one student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get student successful",
                        "schema": {
                            "$ref": "#/definitions/models.GetStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Missing parameter",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authorization header required or Invalid token",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update student data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update student successful",
                        "schema": {
                            "$ref": "#/definitions/models.UpdateStudentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete student",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete student",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Student id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update student successful",
                        "schema": {
                            "$ref": "#/definitions/models.DeleteStudentResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateStudentRequest": {
            "description": "Create student request",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "budi@example.com"
                },
                "major": {
                    "type": "string",
                    "example": "Teknik Industri"
                },
                "name": {
                    "type": "string",
                    "example": "Budi"
                },
                "nim": {
                    "type": "string",
                    "example": "2021003"
                },
                "semester": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "models.CreateStudentResponse": {
            "description": "Create student response",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Student"
                },
                "message": {
                    "type": "string",
                    "example": "Create student success!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.DeleteStudentResponse": {
            "description": "Delete student response",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Student"
                },
                "message": {
                    "type": "string",
                    "example": "Delete student success!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ErrorResponse": {
            "description": "Error response",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid request body"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.GetProfileResponse": {
            "description": "Get profile response",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.ProfileData"
                },
                "message": {
                    "type": "string",
                    "example": "Get profile success!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.GetStudentResponse": {
            "description": "Get student response",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Student"
                },
                "message": {
                    "type": "string",
                    "example": "Get student successful!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.GetStudentsResponse": {
            "description": "Get students response",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Student"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Get students successful!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.LoginData": {
            "description": "Login response data",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Imx1dGhmaSIsImV4cCI6MTc1NTMzMTU5NiwiaWF0IjoxNzU1MjQ1MTk2fQ.7WktpMm0AyyfXUR5x68Om7Pps9uR1resDlh2bz9C_J8"
                }
            }
        },
        "models.LoginRequest": {
            "description": "Login request payload",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "username": {
                    "type": "string",
                    "example": "luthfi"
                }
            }
        },
        "models.LoginResponse": {
            "description": "Login response",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.LoginData"
                },
                "message": {
                    "type": "string",
                    "example": "Login successful!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.ProfileData": {
            "description": "Get profile response data",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.RegisterRequest": {
            "description": "Register response data",
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "username": {
                    "type": "string",
                    "example": "luthfi"
                }
            }
        },
        "models.RegisterResponse": {
            "description": "Register response data",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.LoginData"
                },
                "message": {
                    "type": "string",
                    "example": "Login successful!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.Student": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "luthfi@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "major": {
                    "type": "string",
                    "example": "Computer Science"
                },
                "name": {
                    "type": "string",
                    "example": "Luthfi"
                },
                "nim": {
                    "type": "string",
                    "example": "2021001"
                },
                "semester": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.UpdateStudentRequest": {
            "description": "Update student request",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "luthfi@example.com"
                },
                "major": {
                    "type": "string",
                    "example": "Computer Science"
                },
                "name": {
                    "type": "string",
                    "example": "Luthfi Edited"
                },
                "nim": {
                    "type": "string",
                    "example": "2021001"
                },
                "semester": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.UpdateStudentResponse": {
            "description": "Update student response",
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Student"
                },
                "message": {
                    "type": "string",
                    "example": "Update student success!"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}